name: Publish

on:
  push:
    tags:
      - "*"

jobs:
  binary:
    name: Publish ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - os: ubuntu-latest
            target: x86_64-pc-windows-gnu
          - os: ubuntu-latest
            target: armv7-unknown-linux-musleabihf
          - os: ubuntu-latest
            target: armv7-linux-androideabi
          - os: ubuntu-latest
            target: aarch64-linux-android
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - os: macos-latest
            target: aarch64-apple-darwin
    steps:
      ### We're checking out the repository at the triggered ref
      - uses: actions/checkout@v4

      - name: Build
        id: build
        run: |
          is_windows() {
             local -r target="$1"
             echo "$target" | grep -q "windows"
          }

          cargo install cross

          cross build --release --target "${{ matrix.target }}"

          cd target/${{ matrix.target }}/release/

          if is_windows "${{ matrix.target }}"; then
            zip -r "navi.zip" "navi.exe"
            echo "EXTENSION=zip" >> $GITHUB_OUTPUT
          else
            tar -czf "navi.tar.gz" "navi"
            echo "EXTENSION=tar.gz" >> $GITHUB_OUTPUT
          fi

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/tar/navi.${{ steps.build.outputs.EXTENSION }}
          tag: ${{ github.ref }}
          asset_name: navi-${{ steps.get_version.outputs.VERSION }}-${{ matrix.target }}.${{ steps.build.outputs.EXTENSION }}
